\use-plugin{concourse-docs}

\release-date{2016-04-27}
\release-version{1.2.0}
\release-garden-linux-version{0.337.0}

\note{feature}{
  \reference{fly-cli}{\code{fly}} learned the \reference{fly-check-resource}
  command, which allows you to force detection of versions, notably those in
  the past. This is useful if you've configured a new resource but want to
  use a version that's not the latest one.

  As part of this change we've slightly tweaked how
  \reference{resource-check} works (in a backwards-compatible way). Your
  \code{check} script should now include the requested version in the
  response if it's still valid. This is so that you can run
  \code{check-resource} with the version that you want, rather than the one
  before it.
}

\note{feature}{
  \reference{get-step}s can now be pinned to a specific version.

  Example:

  \codeblock{yaml}{{{
  plan:
  - get: my-repo
    version: {ref: cb0ed22c4cfc6b7524bcafc1664b2d27035521f9}
  }}}

  This will lock the \code{my-repo} step to the specified version. Note that
  the version must be valid, must be collected in the resource's version
  history (which means you may want to use \reference{fly-check-resource}),
  and must also satisfy any \reference{get-step-passed} constraints listed on
  the step.

  See \reference{get-step-version} for more information.
}

\note{feature}{
  \reference{get-step}s can now be configured to run with every version of
  its resource, rather than skipping to the latest.

  Example:

  \codeblock{yaml}{{
  plan:
  - get: pull-requests
    version: every
  }}

  This will allow the build to run with every version of the resource, which
  is probably a bad idea for certain git repos (where folks may push 100
  commits at once), but can make a lot of sense for other things (security
  auditing, handling all pull requests, processing commits across multiple
  branches, etc.).

  See \reference{get-step-version} for more information.
}

\note{fix}{
  We've fixed the rendering of multi-field versions in the UI to be
  substantially less confusing.

  As part of this we've tweaked how we render steps in the UI. The checkboxes
  are now more subtle and less button-like, and aggregate steps look cooler.
}

\note{fix}{
  The ATC now validates that its URL flags are valid URLs. Previously you
  could configure an \code{--external-url} of \code{example.com}, which is
  missing the scheme, so some things would break.
}

\note{feature}{
  We've bumped to Go 1.6.1. You probably don't care.
}

\note{fix}{
  The \resource{docker-image} now requests the correct schema version of
  manifests from the registry, which should fix cases where it would pull the
  wrong digest.

  This is thanks to a PR from \ghuser{databus23}.
}

\note{fix}{
  The \resource{s3} now issues a shouty warning if you're
  still using \code{from} and \code{to}.

  It's configured to blink but our web UI doesn't (YET) support blinking
  text. Consider this a warning. You have one release to comply or be met
  with red, blinking text in your builds.
}

\note{fix}{
  The \resource{semver} can now be configured with an identify for the
  commits made with the \code{git} backend, thanks to a PR from
  \ghuser{shinji62}.
}

\note{feature}{
  \reference{fly-trigger-job} now has a \code{-w} flag for watching the build
  that was created.
}

\note{fix}{
  \reference{fly-cli}{\code{fly}} now respects \code{$http_proxy} and
  \code{$https_proxy} for communication to the Concourse server, thanks to a
  PR from \ghuser{ArthurHlt}.
}

\note{feature}{
  The \resource{docker-image} now has a \code{tag_as_latest} param for
  tagging the image with \code{latest}, in addition to any specified tag,
  thanks to a PR from \ghuser{shinji62}.
}
