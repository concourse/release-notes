\use-plugin{concourse-docs}

\release-date{2018-7-26}
\release-version{4.0.0}
\release-garden-runc-version{1.16.0}

\note{feature,breaking}{
  \link{\image{images/whoami.gif}{Who am I?}}{https://www.youtube.com/watch?v=AK2B5ffWR6g}

  We've completely redone auth! (Read on before upgrading - this is a huge
  change and there are some unsupported migration paths.)

  In contrast to previous releases of Concourse, \italic{users} are now
  central to the authentication flow. Instead of logging in as a team, you
  now log in as a user and can belong to one or more teams. Users can be
  added to a team by configuring the team's whitelist as described in
  \reference{configuring-auth}.

  This is the first step on our march towards full role-based access control.
  Help us plan that out by checking out the
  \link{RFC}{https://github.com/concourse/rfcs/pull/6}!

  In addition, it is now \italic{much} easier to extend Concourse to support
  more providers. We're leveraging CoreOS's
  \link{Dex}{https://github.com/coreos/dex} project for all the moving parts,
  which already supports a ton of providers (Dex calls them "connectors").
  The only delta required for Concourse to support a Dex connector is a tiny
  bit of glue code in our new
  \link{Skymarshal}{https://github.com/concourse/skymarshal} component to
  provide higher-level flags for our CLI.

  This was a large change and it was pretty difficult to make
  backwards-compatible. Here's what's "breaking":

  \list{
    There are different flags to pass to the binary distribution, and the
    BOSH deployment requires manifest changes. Consult
    \reference{configuring-auth} for more information for the binaries, and
    the \link{Concourse BOSH
    deployment}{https://github.com/concourse/concourse-bosh-deployment} repo
    for BOSH.
  }{
    There is no support for configuring the same provider multiple times
    (say, multiple GitHub Enterprise instances). The migration will fail when
    trying to upgrade an instance with teams having different configurations
    for the same provider.

    At the moment, you'll have to deploy multiple Concourse instances. This
    may be something we can support in the future.
  }{
    There is no longer support for BitBucket auth. Sorry - Dex doesn't
    support it. :( However we do support generic LDAP, oAuth, and OIDC
    connectors, which you may be able to use instead.
  }{
    If you have multiple teams configured with the same basic auth username,
    the migration will fail. This is because "basic auth" is now gone and in
    its place is local user configuration. Logging in with basic auth is now
    actually logging in as the configured user, so there can't be multiple.
  }{
    The flags for \reference{fly-set-team} have been split between
    \code{set-team} and \code{concourse web} (because part of the config is
    now global).
  }{
    You may also need to download and install the latest 4.0.0 \code{fly} CLI.
    In the past you would have been able to \code{fly sync} your way to the
    latest version of \code{fly} but the new auth in 4.0.0 will cause the old
    \code{fly} to error out.
  }

  You should definitely check for these conditions and take a database backup
  before attempting the upgrade. In practice, our two largest environments
  upgraded just fine with no intervention required, but if you're not sure,
  it can't hurt to be careful.
}

\note{feature}{
  Thanks to Dex, we now also support LDAP based auth!
}

\note{feature}{
  The \reference{fly-teams} command only lists teams of which you are a
  member (or all teams, if you're a member of the admin team).

  You can also pass \code{-d/--details} to show each team's auth config! This
  should make it a lot easier to check if the auth setup is correct when
  someone complains about not being able to log in.
}

\note{feature,breaking}{
  Owing to the auth revamp, the \reference{fly-set-team} command no longer
  takes flags for the provider configuration (so no client IDs/secrets/etc.).
  This, in combination with the previous feature, should make tweaking the
  auth config a lot easier.
}

\note{feature}{
  The dashboard's influence has taken hold on the web UI! The main page
  (\code{/}) now shows the dashboard instead of some random pipeline
  configured by the first team on the instance. We've also made the dashboard
  more powerful with pipeline pausing and re-ordering. We hope you like it
  because we've removed the sidebar from the pipeline view...it's just \italic{cleaner}.

  We've also spread the colour scheme to the rest of the UI and changed the
  font everywhere to Inconsolata.

}

\note{feature}{
  We've made significant improvements to the performance of the build page
  while keeping its functionality exactly the same.

  See \link{this GitHub
  comment}{https://github.com/concourse/concourse/issues/1543#issuecomment-398188077}
  for the nitty-gritty!

  There's still more work that could be done, and we put some planning on the
  issue, but we figured a 6.5x improvement is a good start so we can get back
  to big juicy features like \italic{space}. If it's still not fast enough
  for you, we could really use your help! We're happy to provide guidance for
  anyone looking to contribute.
}

\note{fix}{
  Previously, if a resource was only ever used as an explicit output of a
  job, it would always show up as black even if it was erroring. It will now
  show up as orange, like the other resources.
}

\note{fix}{
  We've updated some of the messaging in the UI to be less confusing. When
  viewing a build that has not been made public it'll now say you're not
  authorized, rather than telling you to log in, only to tell you to log in
  again, because that didn't change anything.
}

\note{feature}{
  When we redid the container lifecycle way back in \ghrelease{v3.0.0}, one
  side effect was that containers failed one-off builds would be garbage
  collected almost immediately, making it pretty difficult to debug (you'd
  pretty much have to hijack while it was running).

  Thanks to a PR from \ghuser{databus23}, there is now a configurable "grace
  period" after which these containers will be garbage collected! The flag is
  \code{--gc-one-off-grace-period} on the \code{concourse web} command, and
  it defaults to 5 minutes.
}

\note{fix}{
  We fixed a regression with the CredHub integration that caused very high
  CPU usage on the ATC. In addition, we've bumped our CredHub client to
  include a fix PRed by \ghuser{takeyourhatoff} which even further reduces
  CPU usage. Yay!
}

\note{feature}{
  The interval on which resource types are checked for new versions can now
  be set globally via \code{--resource-type-checking-interval}, or
  per-resource-type in a pipeline via \reference{resource-type-check-every}.
}

\note{fix}{
  We fixed a couple situations in the UI where jobs or pipelines with spaces
  in their name would render incorrectly. (Please don't do this though. It
  looks so weird and just makes the CLI hard to use! We may have to tighten
  up naming restrictions in the future, and keeping spaces is pretty low
  priority. Let us know if you have a real good reason though.)
}

\note{fix}{
  Clicking the pipeline in the breadcrumb while already on the pipeline page
  (but viewing a particular group) will now reset the pipeline to the
  "initial" view. This way it behaves like a normal link.
}

\note{fix}{
  Repeated team and pipeline creation and destruction would leave a few
  tables around: \code{team_build_events_XXX} and
  \code{pipeline_build_events_XXX}. This would cause the database to increase
  in CPU usage over time.

  We now ensure these tables get cleaned up via database triggers on
  pipeline/team deletion. However, we decided against writing a migration to
  automatically clean up existing orphaned tables because, well, it felt
  scary and dangerous.

  If you are seeing symptoms of this problem, it should be safe to manually
  drop the tables that have no corresponding pipeline or team. We just didn't
  want to be responsible for a migration that had a high chance of data
  bloodlust. This way it can be your fault instead of ours!
}

\note{feature}{
  We've made quite a few optimizations that should take a lot of load off the
  database. This should improve everything from garbage collection efficiency
  to web UI response time.
}

\note{feature}{
  The Vault credential manager backend can now cache credentials based on
  their lease duration. This was a big chunk of work and should make Vault
  operators' lives a bit easier. To enable this feature, pass
  \code{--vault-cache} to \code{concourse web}. Thanks \ghuser{rfliam} for
  the PR!

  As a side note, we're in need of someone to champion the next phase of
  credential manager support. We've collected feedback from our first (very
  much MVP) implementation but really need individuals who have experience
  with each backend to take the next step. See \ghissue{5}{rfcs} for more
  information!
}

\note{fix}{
  When running on Windows, we will no longer shell out to \code{tar} for
  performing volume streaming operations, since it seems to be pretty
  unreliable. A native Go implementation will be used instead, which is a bit
  slower but much more portable. Thanks for the PR, \ghuser{ankeesler}!
}

\note{feature}{
  The \reference{fly-cli} now supports \code{--json} on most commands to dump
  info in JSON format, rather than the human-friendly table format.
}

\note{fix}{
  Recent versions of Docker introduced an issue where \code{dockerd} could
  fail to start if the worker was under load. This resulted in an infinite
  loop in the \resource{docker-image}.

  We've made the resource more resilient to this - it'll detect a failure to
  start and keep resuscitating \code{dockerd} until it starts, giving up
  after 2 minutes.
}

\note{feature}{
  The \resource{s3} now supports \code{skip_download: true}, thanks to a PR
  by \ghuser{talset}!
}

\note{fix}{
  The BOSH release now has properties for configuring the DataDog metrics
  emitter, thanks to \ghuser{SHyx0rmZ}!
}

\note{feature}{
  We've split the migration operations out into a separate subcommand:
  \code{concourse migrate}. This is just a bit easier to reason about rather
  than having all the options baked in to the same command that runs the ATC,
  and also lets you run migrations without passing all the other flags
  required by \code{concourse web}.
}

\note{feature}{
  The Prometheus metrics will now automatically prune stale workers, thanks
  to a PR by \ghuser{databus23}!
}

\note{feature,breaking}{
  The Prometheus metrics for pipeline scheduling are now counters instead of
  gauges, thanks to a PR by \ghuser{databus23}!
}

\note{feature}{
  There are now metrics emitted for peridoc resource checking, thanks to a PR
  by \ghuser{databus23}!
}

\note{fix}{
  Fixed handling of \code{no_proxy} in \code{concourse worker}, thanks to a
  PR by \ghuser{databus23}!
}

\note{fix}{
  The \resource{docker-image} now includes support for fetching and
  extracting \code{xz} packages in \code{ADD} commands, thanks to a PR by
  \ghuser{et7peho}.
}

\note{feature}{
  The \resource{cf} now supports \code{no_start: true}, thanks to a PR by
  \ghuser{klakin-pivotal}!
}

\note{feature}{
  The \resource{docker-image} now has a \code{tag_file} param which
  deprecates the old \code{tag} command which does the same thing. This is in
  the interest of clearer naming. Thanks for the PR, \ghuser{ghostsquad}!
}
